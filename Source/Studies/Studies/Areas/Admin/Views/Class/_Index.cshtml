@using System.Web.Mvc.Html
@using CORE.Tables
@model System.Collections.Generic.List<CORE.Views.V_CLASS>


@{
    int? totalPage = (int?)ViewBag.maxNumber;
    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
    var jsonModel = serializer.Serialize(Model);
    var ok = jsonModel;
    var boxSubjects = (List<CORE.Views.V_BOX_SUBJECT>)ViewBag.boxSubjects;
    var users = (List<TB_USERS>)ViewBag.users;
}

<div class="div-h100 @if (totalPage.HasValue && totalPage.Value > 1) { <text>div-bottom56</text> }">
    <div class="div-h100-body">
        <div class="well">
            <table class="table">
                <thead>
                    <tr>
                        <th class="fixed-col">STT</th>
                        <th>Mã lớp</th>
                        <th>Mã khôi</th>
                        <th>Tên môn học</th>
                        <th>Giờ bắt đầu - Giờ kết thúc</th>
                        <th>Giá</th>
                        <th>Giáo viên chính</th>
                        <th>Mô tả</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <tr class="text-center">
                            <td class="fixed-col">@((ViewBag.pageNumber - 1) * ViewBag.pageSize + i + 1)</td>
                            <td>@Model[i].ScheduleCode</td>

                            @foreach (var boxSubject in boxSubjects)
                            {
                                if (boxSubject.BoxSubjectId.Equals(Model[i].ScheduleIdBoxSubjectId))
                                {
                                    <td>@boxSubject.BoxId</td>
                                    <td>@boxSubject.SubjectName</td>
                                }
                            }
                            <td>@Model[i].ScheduleDetailTimeFrom - @Model[i].ScheduleDetailTimeTo</td>
                            <td>@CORE.Helpers.ConvertDataWithView.Currency_ToView(Model[i].SchedulePrice)</td>
                            @foreach (var user in users)
                            {
                                if (@Model[i].ScheduleUserId.Equals(user.UserId))
                                {
                                    <td>@user.UserFullName</td>

                                }
                            }
                            <td>@(Model[i].ScheduleDetailNote.ToArray().Length > 30 ? Model[i].ScheduleDetailNote.Substring(0, 30) + "...." : Model[i].ScheduleDetailNote)</td>

                            <td class="text-center">
                                <ul class="icons-list" style="display:flex">
                                    <li class="btnEdit" onclick="onEdit(this)" data-index=@i>
                                        <button type="button" data-toggle="modal" data-target="#modal_default" class="btn btn-default btn-sm text-danger-600" title="Thông tin chi tiết lớp học"><i class="glyphicon glyphicon-pencil" aria-hidden="true"></i></button>
                                    </li>
                                    <li>
                                        <a href="Class/Class_Detail?id=@Model[i].ScheduleId" title="Thông tin học sinh trong lớp học" class="btn btn-default btn-sm text-primary-600"><i class="icon-pencil7"></i></a>
                                    </li>
                                    <li class="btnDelete" data-id='@Model[i].ScheduleId' title="Xóa lớp học" data-title="Bạn có chắc chắn muốn xóa bản ghi? ">
                                        <button type="button" class="btn btn-default btn-sm text-danger-600"><i class="icon-trash"></i></button>
                                    </li>
                                </ul>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="">
    @{ Html.RenderAction("_Pagination", "HomeAdmin", new { maxNumber = ViewBag.maxNumber, pageNumber = ViewBag.pageNumber });}
</div>

<script>
    let url_get = "/Admin/Class/_Index";
    let data = @Html.Raw(Json.Encode(Model));
    let box =@Html.Raw(Json.Encode(boxSubjects));
    function onEdit(event){
        var stt = event.dataset.index;
        var dataEdit = data[stt];
        setValueForEdit(dataEdit);
    }
    $('.btnAdd').click(function(){
        $('#UserId').attr('disabled','true');
        $('#ScheduleId').val("");
        $('#BoxId').val("").change();;
        $('#BoxSubjectId').val("").change();
        $('#TimeStart').val("");
        $('#TimeEnd').val("");
        $('#DateStart').val("");
        $('#DateEnd').val("");
        $('#Price').val("");
        $('#UserId').val("").change();
        $('#dayOfWeek').val("").change();
        $('#Status').val('A').change();

        $('#UserNote').val("");
    });
    function GetTimeSpan(number){
        var seconds = number / 1000;
        var hour = Math.floor(seconds / 3600);
        var check = Math.floor(hour/10000);
        var mm = Math.floor((number % 3600) / 60);
        var result = "";
        if(check - 12 >0 ){
            result = ((check-12)>=10?""+check:"0"+(check-12)) + ":" + (mm>10?""+mm:"0"+mm) + " PM";
        }else if(check ==12){
            result = (check>=10?""+check:"0"+check) + ":" +(mm>10?(""+mm):("0"+mm)) + " PM";
        }
        else {
            result = (check>=10?""+check:"0"+check) + ":" +(mm>10?(""+mm):("0"+mm)) + " AM";
        }
        return result;
    }
    function setValueForEdit(list){
        $('#UserId').removeAttr('disabled','false');
        $('#ScheduleId').val(list.ScheduleId);
        $('#BoxId').val(box.filter(x=>x.BoxSubjectId ==list.ScheduleIdBoxSubjectId)[0].BoxId).change();;
        $('#BoxSubjectId').val(list.ScheduleIdBoxSubjectId).change();
        $('#TimeStart').val(GetTimeSpan(list.ScheduleDetailTimeFrom.Ticks));
        $('#TimeEnd').val(GetTimeSpan(list.ScheduleDetailTimeTo.Ticks));
        $('#DateStart').val(list.ScheduleDateBegin.split('-').reverse().join('/'));
        $('#DateEnd').val(list.ScheduleDateEnd.split('-').reverse().join('/'));
        $('#Price').val(list.SchedulePrice);
        $('#UserId').val(list.ScheduleUserId).change();
        $('#dayOfWeek').val(list.ScheduleDetailDayOfWeek).change();
        $('#Status').val(list.ScheduleStatus).change();
        $('#ScheduleFileId').val(list.ScheduleFileId);
        $('#UserNote').val(list.ScheduleDetailNote);
        console.log(list);
    }
    let getParamsForSearch = (pageNumber,isNext)=>{
        return {
            "keyText": $(".txtSearch").val() ,
            "pageNumber": pageNumber + isNext,
            "pageSize": $(".select2-selection--single.select2-selection__rendered.d-inline page-size").val() ,
            "status" : $("#user-status").val()
        };
    }

    let getSubParam = ()=>{
        return {
            DateStart : convertToYYMMDD($("#DateStart").val()),
            DateEnd : convertToYYMMDD($("#DateEnd").val()),

        }
    }

    var features = new Features(url_get,@Html.Raw(jsonModel),getParamsForSearch);
    //features.CheckUpdateAndFillInfo();
    //features.insertOrUpdate("/Admin/Ajax/InsertOrUpdateUser", getSubParam, getParamsForSearch);
    //features.Delete("/Admin/Ajax/DeleteUser",getParamsForSearch);
</script>